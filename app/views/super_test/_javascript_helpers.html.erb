<% if Rails.env.test? %>


  <style>
    .super-test-menu {
      width: 120px;
      z-index: 1;
      box-shadow: 0 4px 5px 3px rgba(0, 0, 0, 0.2);
      position: fixed;
      display: none;
      background: white;
      /* transition: 0.2s display ease-in; */
    }

    .super-test-menu .super-test-menu-options {
      list-style: none;
      padding: 10px 0;
      z-index: 1;
    }
        
    .super-test-menu .super-test-menu-options .super-test-menu-option {
      font-weight: 500;
      z-index: 1;
      font-size: 14px;
      padding: 10px 40px 10px 20px;
      cursor: pointer;
    }

    .super-test-menu-option:hover {
      background: rgba(0, 0, 0, 0.2);
    }




  </style>

  <script text="text/javascript">
    $(function() {
      console.log("âœ… Super Test activated in the browser!")

      $( document ).on('turbolinks:load', function() {
        console.log("Turbolinks just loaded this page");
        enableContextMenu();
      })

      function enableContextMenu(){
        const menu = document.createElement("div")
        menu.classList.add("super-test-menu")
        menu.innerHTML = '<ul class="super-test-menu-options"><li class="super-test-menu-option" id="assert-exists">Assert Exists</li><li class="super-test-menu-option" id="track-keystrokes">Track Keystrokes</li></ul>'
        document.body.appendChild(menu);
        console.log("Appending the menu to the document...");
        console.log(menu);
        // console.log($(document).find(".super-test-menu"));
        const menuOption = document.querySelector(".super-test-menu-option");
        let menuVisible = false;

        const toggleMenu = command => {
          menu.style.display = command === "show" ? "block" : "none";
          menuVisible = !menuVisible;
        };

        const setPosition = ({ top, left }) => {
          console.log("Running setPosition function");
          menu.style.left = `${left}px`;
          menu.style.top = `${top}px`;
          toggleMenu("show");
        };

        window.addEventListener("click", e => {
          if (menuVisible) toggleMenu("hide");
        });

        menuOption.addEventListener("click", e => {
          console.log("mouse-option", e.target.innerHTML);
        });

        $(document).contextmenu(function(e) {
          console.log("Context menu click!")
          e.preventDefault();
          const origin = {
            left: e.pageX,
            top: e.pageY
          };
          setPosition(origin);
          return false;
        })

        $("#assert-exists").on("mousedown", function(e) {
          e.preventDefault();
          var text = selectedText();
          var action = "assert(page.has_content?('" + text.replace("'", "\\\'") +  "'))";
          var testingOutput = JSON.parse(sessionStorage.getItem("testingOutput"));
          var target = "";
          var options = "";
          testingOutput.push({action: action, target: target, options: options}); 
          sessionStorage.setItem("testingOutput", JSON.stringify(testingOutput));
        });
  
        $("#track-keystrokes").on("click", function(e){
          console.log("Track keystrokes called");
          trackKeystrokes();
          console.log("Tracking keystrokes is: " + trackingKeystrokes);
          return true;
        });

      }

      let trackingKeystrokes = false;

      enableContextMenu();




      function selectedText(){
        var text = "";
        if (window.getSelection) {
            text = window.getSelection().toString();
        } else if (document.selection && document.selection.type != "Control") {
            text = document.selection.createRange().text;
        }
        return text;
      }

      function trackKeystrokes(){
        trackingKeystrokes = true;
      }


      if (sessionStorage.getItem("testingOutput") == null) {
        sessionStorage.setItem("testingOutput", JSON.stringify([]));
      }
      $(document).on('click', '*', function(event) {
        var tagName = event.currentTarget.tagName
        if (tagName == "BUTTON" || tagName == "A" || tagName == "INPUT") {
          if (tagName == "INPUT" && event.currentTarget.type != "submit") {
            return;
          }
          var action = "click_on"
          var target = event.currentTarget.value || event.currentTarget.text.trim()
          var options = ""
          var testingOutput = JSON.parse(sessionStorage.getItem("testingOutput"));
          testingOutput.push({action: action, target: "\'" + target + "\'", options: options });
          sessionStorage.setItem("testingOutput", JSON.stringify(testingOutput));
        }
      });


      document.onkeypress = function(evt) {
        evt = evt || window.event;
        var charCode = evt.keyCode || evt.which;
        var charStr = String.fromCharCode(charCode);
        if (!evt.target.labels) {
          return;
        }
        var label = evt.target.labels[0].textContent;
        var text = (evt.target.value + charStr).trim().replace("'", "\\\'");
        var action = "fill_in";
        var target = evt.target.labels[0].textContent;
        var options = ", with: '" + text + "'";
        var testingOutput = JSON.parse(sessionStorage.getItem("testingOutput"));
        var lastAction = testingOutput[testingOutput.length - 1];
        console.log("Key press event char code was:")
        console.log(charCode);
        if (lastAction && lastAction.action == action && lastAction.target == "\'" + target + "\'") {
          lastAction.options = options;
        } else { 
          testingOutput.push({action: action, target: "\'" + target + "\'", options: options});
        }
        sessionStorage.setItem("testingOutput", JSON.stringify(testingOutput));
      }

      function capybaraFromCharCode(charCode) {
        codes = {
          8  : ':backspace',
          9  : ':tab',
          13 :  ':enter',
          16 :  ':shift',
          17 :  ':control',
          18 :  ':alt',
          19 :  ':pause',
          27 :  ':escape',
          32 :  ':space',
          33 :  ':page_up',
          34 :  ':page_down',
          35 :  ':end',
          36 :  ':home',
          37 :  ':left',
          38 :  ':up',
          39 :  ':right',
          40 :  ':down',
          45 :  ':insert',
          46 :  ':delete',
        }
        return codes[charCode];
      }

      document.onkeydown = function(evt) {
        if(!trackingKeystrokes){
          console.log("Not tracking keystrokes..quitting");
          return;
        }
        console.log("We ARE tracking keystrokes... :)");
        evt = evt || window.event;
        var charCode = evt.keyCode || evt.which;
        var charStr = capybaraFromCharCode(charCode);
        var letter = String.fromCharCode(charCode);
        var tagName = evt.target.tagName.toLowerCase();
        var action = `find('${tagName}').`;
        var target = ""
        if (charStr) {
          target = `send_keys(${charStr})`;
        } else {
          target = `send_keys('${letter}')`;
        }
        var options = "";
        console.log("the char str is " + charStr);
        var testingOutput = JSON.parse(sessionStorage.getItem("testingOutput"));
        var lastAction = testingOutput[testingOutput.length - 1];
        if (lastAction && lastAction.action == action && lastAction.target.substr(0,9) == 'send_keys') {
          if (charStr) {
            lastAction.target = lastAction.target.substr(0, lastAction.target.length - 1) + ', ' + charStr + '' + ')'
          } else {
            lastAction.target = lastAction.target.substr(0, lastAction.target.length - 1) + ', \'' + letter + '\'' + ')'
          }
        } else {
          testingOutput.push({action: action, target: target, options: options});
        }
        // if (lastAction && lastAction.action == action && lastAction.target == "\'" + target + "\'") {
        //   lastAction.options = options;
        // } else { 
        //   testingOutput.push({action: action, target: target, options: options});
        // }
        sessionStorage.setItem("testingOutput", JSON.stringify(testingOutput));
      }

    });


  </script>
<% end %>
